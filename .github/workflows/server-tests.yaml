name: Tests

on: [push, pull_request]

jobs:
  lint:
    name: Run tests

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: dalalstreet_bots
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: move to server
        run: cd ./server

      - name: Install poetry
        run: pip install poetry==1.1

      # - uses: actions/cache@v2.1.6
      #   id: cache-dev-deps
      #   with:
      #     path: .venv
      #     key: venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
      #     restore-keys: |
      #       venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-
      #       venv-dev-${{ runner.os }}-py-${{ matrix.python-version }}-
      #       venv-dev-${{ runner.os }}-py-
      #       venv-dev-${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-dev-deps.outputs.cache-hit != 'true'
        run: |
          cd ./server
          poetry config virtualenvs.in-project true
          poetry install
      - name: Create database if it doesn't exist already
        run: mysql --host 127.0.0.1 --port 3306 -u root -e "CREATE DATABASE IF NOT EXISTS dalalstreet_bots"
      - name: Run tests
        env:
          APP_ENV: test
          GRPC_SERVER_URI: https://localhost:8000
          DB_SCHEME: mysql
          DB_NAME: dalalstreet_bots
          DB_PWD: ""
          DB_USER: root
          DB_HOST: localhost
          DB_PORT: 3306
          DB_URI: mysql://root@localhost:3306/dalalstreet_bots
        run: |
          cd server
          cp .example.env .env
          poetry run alembic upgrade head
          poetry run ./scripts/test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
